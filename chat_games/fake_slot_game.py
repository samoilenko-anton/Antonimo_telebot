import random
from datetime import datetime
from telegram import Update
from telegram.ext import ContextTypes
import os
import json
import shlex

EMOJIS = ["üçí", "üçã", "üîî", "üçâ", "‚≠ê", "üçá", "üíé", "üçÄ", "üçé", "üçä", "üçå", "7Ô∏è‚É£"]

# game data 
DATA_DIR = "data"
if not os.path.exists(DATA_DIR):
    os.makedirs(DATA_DIR)

SLOTS_DATA_FILE = os.path.join(DATA_DIR, "slots_data.json")

try:
    with open(SLOTS_DATA_FILE, "r", encoding="utf-8") as f:
        fake_slot_game_data = json.load(f)
except FileNotFoundError:
    fake_slot_game_data = {}

def spin_slot():
    while True:
        # random 3 smiles
        result = [random.choice(EMOJIS) for _ in range(3)]
        # no jackpot
        if result == ["7Ô∏è‚É£", "7Ô∏è‚É£", "7Ô∏è‚É£"]:
            continue
        return result

def save_slots_data():
    with open(SLOTS_DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(fake_slot_game_data, f, ensure_ascii=False, indent=2)

async def slot_custom(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = str(update.effective_chat.id)
    user_id = str(update.effective_user.id)

    try:
        args = shlex.split(update.message.text)
    except Exception:
        await update.message.reply_text("‚ùó –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ª–∞–ø–∫–∏ –¥–ª—è –Ω–∞–∑–≤ –∑ –ø—Ä–æ–±—ñ–ª–∞–º–∏.")
        return

    if len(args) < 3:
        await update.message.reply_text(
            '‚ùó –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:\n/slot @username "–Ω–∞–∑–≤–∞ –≥—Ä–∏"\n'
            '–ù–∞–∑–≤–∞ –≥—Ä–∏ –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–æ–±—ñ–ª–∏, —è–∫—â–æ —ó—ó –≤–∑—è—Ç–æ –≤ –ª–∞–ø–∫–∏.'
        )
        return

    target_username = args[1]
    game_name = args[2]

    if not target_username.startswith("@"):
        await update.message.reply_text("‚ùó –ü–µ—Ä—à–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ username –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ @, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ @ivan.")
        return

    if chat_id not in fake_slot_game_data:
        fake_slot_game_data[chat_id] = {}

    user_data = fake_slot_game_data[chat_id].get(user_id, {"date": "", "count": 0})
    today = datetime.now().strftime("%Y-%m-%d")

    if user_data["date"] != today:
        user_data = {"date": today, "count": 0}

    if user_data["count"] >= 3:
        await update.message.reply_text("‚õî –í–∏–±–∞—á, –∞–ª–µ —Ç–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —É—Å—ñ 3 —Å–ø—Ä–æ–±–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.")
        return

    result = spin_slot()
    result_str = "".join(result)

    user_data["count"] += 1
    user_data["date"] = today
    fake_slot_game_data[chat_id][user_id] = user_data
    save_slots_data()

    if len(set(result)) == 1 and result[0] != "7Ô∏è‚É£":
        text = f"üé∞ [{game_name}] –í–∏–ø–∞–ª–æ: {result_str}\n–ù–∞–∂–∞–ª—å, –≤–∏–≥—Ä–∞—à–Ω–∏—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π –Ω–µ–º–∞—î. –°–ø—Ä–æ–±—É–π —â–µ!"
    else:
        text = f"üé∞ [{game_name}] –í–∏–ø–∞–ª–æ: {result_str}\n–°–ø—Ä–æ–±—É–π –≤–∏–≥—Ä–∞—Ç–∏ –¥–∂–µ–∫–ø–æ—Ç!"

    text += f"\nüéÅ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {target_username} –Ω–µ –ø–æ–¥–∞—Ä—É—î —Ç–æ–±—ñ {game_name} :("

    await update.message.reply_text(text)